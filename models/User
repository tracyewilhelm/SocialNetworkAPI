const { Schema, model } = require("mongoose");
const Thought = require("./Thought");

// creating the base model for a user
const userSchema = new Schema(
  //the base model for a user requires a username, email, thoughts, and friends
  {
    username: {
      type: String,
      unique: true,
      required: true,
      trim: true,
    },
    //email is required, and to prevent users from putting in gibberish, it must comply with the email regex
    email: {
      type: String,

      unique: true,
      validate: {
        validator: function (v) {
          return /^([a-z0-9_\.-]+)@([\da-z\.-]+)\.([a-z\.]{2,6})$/.test(v);
        },
        message: (props) => `${props.value} is not a valid email`,
      },
      required: true,
    },
    thoughts: [
      {
        type: Schema.Types.ObjectId,
        ref: "thought",
      },
    ],
    friends: [this],
  },
  {
    toJSON: {
      virtuals: true,
    },
    id: false,
  }
);

//create a virtual called "friendCount" that retrieves the length of the user's "friends" array field on query
userSchema.virtual("friendCount").get(function () {
  return this.friends.length;
});

//initialize the User model
const User = model("user", userSchema);

module.exports = User;
